{"version":3,"file":"static/js/927.de037566.chunk.js","mappings":"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","sources":["components/ArtMainLayout/ArtMainLayout.tsx","webpack://cells-flasher-react/./src/components/ArtMainLayout/ArtMainLayout.module.scss?6688","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://cells-flasher-react/./src/components/Button/Button.module.scss?f17a","components/Button/Button.tsx","helpers/cellsLineChecker.ts","helpers/computeResult.ts","webpack://cells-flasher-react/./src/components/CellsController/CellsController.module.scss?cc4c","components/CellsController/CellsController.tsx","webpack://cells-flasher-react/./src/components/ToastMessage/ToastMessage.module.scss?b713","components/ToastMessage/ToastMessage.tsx","helpers/animationHelpers.ts","helpers/formatDate.ts","webpack://cells-flasher-react/./src/components/DateTime/DateTime.module.scss?bda1","components/DateTime/DateTime.tsx","webpack://cells-flasher-react/./src/components/Separator/Separator.module.scss?4a5f","components/Separator/Separator.tsx","webpack://cells-flasher-react/./src/components/Subtitle/Subtitle.module.scss?57b1","components/Subtitle/Subtitle.tsx","webpack://cells-flasher-react/./src/components/RegisteredArts/RegisteredArts.module.scss?fb03","components/RegisteredArts/RegisteredArts.tsx","pages/PreviousArts.tsx"],"sourcesContent":["import { IHOC } from \"../../custom_types/hoc\";\nimport rootCss from \"../../index.module.scss\";\n\nimport css from \"./ArtMainLayout.module.scss\";\n\nconst className = [css.game, rootCss[\"margin-top\"]].join(\" \");\n\nconst ArtMainLayout = ({ children }: IHOC): JSX.Element => {\n  return <div className={className}>{children}</div>;\n};\n\nexport default ArtMainLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"game\":\"ArtMainLayout_game__4ojcY\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\"};","import { ComponentProps } from \"react\";\n\nimport { IHOC } from \"../../custom_types/hoc\";\n\nimport css from \"./Button.module.scss\";\n\nconst Button = ({\n  children,\n  ...props\n}: IHOC & ComponentProps<\"button\">): JSX.Element => {\n  return (\n    <button className={css.button} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","type TCells = Array<null | string>;\ntype TCheck = false | Array<number>;\ninterface IParams {\n  i: number;\n  cells_per_row: number;\n  cells: TCells;\n}\nconst cellsLineChecker = {\n  _check(indexes: Array<number>, cells: TCells) {\n    return (\n      cells[indexes[0]] === cells[indexes[1]] &&\n      cells[indexes[1]] === cells[indexes[2]] &&\n      indexes\n    );\n  },\n  horizontal({ i, cells }: IParams): TCheck {\n    const indexes = [i, i + 1, i + 2];\n    return this._check(indexes, cells);\n  },\n  vertical({ i, cells_per_row, cells }: IParams): TCheck {\n    const indexes = [i, i + cells_per_row, i + cells_per_row * 2];\n    return this._check(indexes, cells);\n  },\n  diagonalRight({ i, cells_per_row, cells }: IParams): TCheck {\n    if (cells_per_row - (i % cells_per_row) < 3) {\n      return false;\n    }\n    const indexes = [i, i + cells_per_row + 1, i + cells_per_row * 2 + 2];\n    return this._check(indexes, cells);\n  },\n  diagonalLeft({ i, cells_per_row, cells }: IParams): TCheck {\n    if (i % cells_per_row < 2) {\n      return false;\n    }\n    const indexes = [i, i + cells_per_row - 1, i + cells_per_row * 2 - 2];\n    return this._check(indexes, cells);\n  },\n};\n\nexport { cellsLineChecker };\n","import { cellsLineChecker } from \"./cellsLineChecker\";\n\n//type Tresult = Array<number>;\n\nconst computeResult = (\n  cells: Array<null | string>,\n  cells_per_row: number\n): Array<number> => {\n  const winning_lines: Array<Array<number>> = [];\n  const params = {\n    i: 0,\n    cells,\n    cells_per_row,\n  };\n\n  cells.forEach((cell, index, array) => {\n    if (!cell || index >= array.length - 2) {\n      return;\n    }\n\n    params.i = index;\n\n    [\n      cellsLineChecker.horizontal(params),\n      cellsLineChecker.vertical(params),\n      cellsLineChecker.diagonalRight(params),\n      cellsLineChecker.diagonalLeft(params),\n    ].forEach((line) => {\n      if (line && line.length) {\n        winning_lines.push(line);\n      }\n    });\n  });\n\n  return winning_lines.flat();\n};\n\nexport { computeResult };\n","// extracted by mini-css-extract-plugin\nexport default {\"cells\":\"CellsController_cells__tOX0j\",\"player-x\":\"CellsController_player-x__Aau8H\",\"player-o\":\"CellsController_player-o__MSW80\",\"is--winner-move\":\"CellsController_is--winner-move__yF+Ky\",\"flash\":\"CellsController_flash__750Kn\"};","import { useState, useCallback, CSSProperties } from \"react\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\n\nimport { TCells } from \"../../custom_types/cells\";\nimport { computeResult } from \"../../helpers/computeResult\";\nimport { makeArray } from \"../../helpers/makeArray\";\nimport {\n  updateCellsState,\n  selectCellsPerRow,\n} from \"../../store/features/cellsState\";\nimport { setNewRoundInProgress } from \"../../store/features/newRoundInProgress\";\nimport { selectCellsKey } from \"../../store/features/resetCells\";\nimport { RootState } from \"../../store/store\";\n\nimport css from \"./CellsController.module.scss\";\n\ninterface ICellsProps {\n  cellsPerRow: number;\n  forceCellsArray?: TCells | null;\n  isPlayable?: boolean;\n}\n\ntype TWinningMoves = Array<number>;\n\n/**\n * This container provides a way to reset the state of Cells by way of the \"key\" prop update.\n * This allows to efficiently re-render Cells when user changes the number of cells per row.\n * Surprisingly, it is way faster than setting a \"forceCellsArray\" prop on a store and accessing it via redux.\n */\nconst CellsController = (): JSX.Element => {\n  const cells_per_row = useSelector(selectCellsPerRow);\n  const cells_key = useSelector(selectCellsKey);\n\n  return <Cells cellsPerRow={cells_per_row} key={cells_key + cells_per_row} />;\n};\n\nconst Cells = ({\n  cellsPerRow,\n  forceCellsArray = null,\n  isPlayable = true,\n}: ICellsProps): JSX.Element => {\n  const store = useStore();\n  const [cells, setCells] = useState<TCells>(\n    forceCellsArray ? forceCellsArray : makeArray(cellsPerRow)\n  );\n  const [is_player_x, setPlayerTurn] = useState(true);\n  const [winning_moves, setWinningMoves] = useState<TWinningMoves>(\n    forceCellsArray\n      ? Array.from(new Set(computeResult(forceCellsArray, cellsPerRow)))\n      : []\n  );\n  const [can_draw, setCanDraw] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handlePointerEvent = useCallback(\n    (index: number) => () => {\n      const { linesAreDrawn, countdownIsReached } =\n        store.getState() as RootState;\n\n      if (!linesAreDrawn || countdownIsReached || cells[index]) {\n        return;\n      }\n\n      const new_cells = [...cells];\n      new_cells[index] = is_player_x ? \"x\" : \"o\";\n      const new_result = computeResult(new_cells, cellsPerRow);\n\n      setWinningMoves(Array.from(new Set([...winning_moves, ...new_result])));\n      setCells(new_cells);\n      setPlayerTurn(!is_player_x);\n\n      dispatch(updateCellsState(new_cells));\n      dispatch(setNewRoundInProgress());\n    },\n    [cells]\n  );\n\n  const setClassName = useCallback(\n    (winning_moves: TWinningMoves, cell: null | string, index: number) => {\n      if (cell) {\n        const cell_class: string = css[`player-${cell}`];\n        const winner_class: string =\n          winning_moves.indexOf(index) >= 0 ? css[\"is--winner-move\"] : \"\";\n\n        return [cell_class, winner_class].join(\" \");\n      }\n    },\n    []\n  );\n\n  const inline_style = {\n    \"--cells-per-row\": cellsPerRow,\n  } as CSSProperties;\n\n  return (\n    <div\n      {...{\n        style: inline_style,\n        className: css.cells,\n        ...(isPlayable && {\n          onPointerDown: () => setCanDraw(true),\n          onPointerUp: () => setCanDraw(false),\n          onPointerLeave: () => setCanDraw(false),\n        }),\n      }}\n    >\n      {cells.map((cell, index) => {\n        return (\n          <div\n            {...{\n              className: setClassName(winning_moves, cell, index),\n              key: index.toString(),\n              ...(isPlayable && {\n                onPointerMove: can_draw ? handlePointerEvent(index) : undefined,\n                onClick: handlePointerEvent(index),\n              }),\n            }}\n          >\n            {cell}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CellsController;\nexport { Cells };\n","// extracted by mini-css-extract-plugin\nexport default {\"toast\":\"ToastMessage_toast__hy1BO\",\"slideUp\":\"ToastMessage_slideUp__g5bH0\",\"success\":\"ToastMessage_success__ZwIRW\",\"error\":\"ToastMessage_error__1aR33\"};","import { useEffect, useRef } from \"react\";\n\nimport { restartAnimation } from \"../../helpers/animationHelpers\";\n\nimport css from \"./ToastMessage.module.scss\";\n\ninterface IToastMessageProps {\n  type: \"error\" | \"success\";\n  text: string;\n}\n\nconst ToastMessage = ({ type, text }: IToastMessageProps): JSX.Element => {\n  const toast = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    restartAnimation(toast.current);\n  }, [type, text]);\n\n  return (\n    <div ref={toast} className={`${css.toast} ${css[type]}`}>\n      {text}\n    </div>\n  );\n};\n\nexport default ToastMessage;\n","type TElement = HTMLElement | SVGCircleElement | null;\n\nconst _getAnimation = (element: TElement) => {\n  if (!element) {\n    return;\n  }\n\n  return element.getAnimations()?.[0];\n};\n\nconst restartAnimation = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.cancel();\n  animation?.play();\n};\n\nconst pauseAnimation = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.pause();\n};\n\nconst forceAnimationEnd = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.finish();\n};\n\nconst reverseAnimation = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.reverse();\n};\n\nexport {\n  restartAnimation,\n  pauseAnimation,\n  forceAnimationEnd,\n  reverseAnimation,\n};\n","const datetime_format: Intl.DateTimeFormatOptions = {\n  year: \"numeric\",\n  month: \"numeric\",\n  day: \"numeric\",\n  hour: \"numeric\",\n  minute: \"numeric\",\n};\n\nconst readable_format: Intl.DateTimeFormatOptions = {\n  dateStyle: \"full\",\n  timeStyle: \"short\",\n  timeZone: \"Europe/Paris\",\n};\n\nconst regex = /\\//g;\n\nconst formatDate = (date: string, options: Intl.DateTimeFormatOptions) => {\n  const formatted_date = Intl.DateTimeFormat(\"fr\", options).format(\n    new Date(date)\n  );\n\n  if (!options.dateStyle) {\n    return formatted_date.replace(regex, \"-\");\n  }\n\n  return formatted_date;\n};\n\nexport { formatDate, readable_format, datetime_format };\n","// extracted by mini-css-extract-plugin\nexport default {\"datetime\":\"DateTime_datetime__WdgMQ\"};","import {\n  formatDate,\n  datetime_format,\n  readable_format,\n} from \"../../helpers/formatDate\";\n\nimport css from \"./DateTime.module.scss\";\n\ninterface IDateTimeProps {\n  date: string;\n}\nconst DateTime = ({ date }: IDateTimeProps): JSX.Element => {\n  return (\n    <time className={css.datetime} dateTime={formatDate(date, datetime_format)}>\n      {formatDate(date, readable_format)}\n    </time>\n  );\n};\n\nexport default DateTime;\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"Separator_separator__cpSDq\"};","import css from \"./Separator.module.scss\";\n\nconst Separator = (): JSX.Element => {\n  return <hr className={css.separator} />;\n};\n\nexport default Separator;\n","// extracted by mini-css-extract-plugin\nexport default {\"h2-text\":\"Subtitle_h2-text__F00x8\"};","import { ITitleProps } from \"../../custom_types/titles\";\n\nimport css from \"./Subtitle.module.scss\";\n\nconst Subtitle = ({ children }: ITitleProps): JSX.Element => {\n  return (\n    <h2>\n      <span className={css[\"h2-text\"]}>{children}</span>\n    </h2>\n  );\n};\n\nexport default Subtitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"stored-art\":\"RegisteredArts_stored-art__JbALt\",\"header\":\"RegisteredArts_header__Lhi-2\"};","import { FormEvent } from \"react\";\nimport { useActionData, useSubmit } from \"react-router-dom\";\n\nimport { TStoredArts } from \"../../custom_types/stored-arts\";\nimport { IProcess } from \"../../helpers/artStorage\";\nimport rootCss from \"../../index.module.scss\";\nimport ArtMainLayout from \"../ArtMainLayout/ArtMainLayout\";\nimport Button from \"../Button/Button\";\nimport { Cells } from \"../CellsController/CellsController\";\nimport DateTime from \"../DateTime/DateTime\";\nimport Paragraph from \"../Paragraph/Paragraph\";\nimport Separator from \"../Separator/Separator\";\nimport Subtitle from \"../Subtitle/Subtitle\";\nimport ToastMessage from \"../ToastMessage/ToastMessage\";\n\nimport css from \"./RegisteredArts.module.scss\";\n\nconst RegisteredArts = ({\n  storedArts,\n}: {\n  storedArts: TStoredArts;\n}): JSX.Element => {\n  const art_deleted: IProcess = useActionData() as IProcess;\n  const className = [css[\"stored-art\"], rootCss[\"margin-top\"]].join(\" \");\n  const submit = useSubmit();\n\n  const deleteArt = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    submit(event.currentTarget);\n  };\n\n  return (\n    <>\n      {storedArts.map((art, index) => {\n        const { name, cells, date, description } = art;\n        const cells_per_row = Math.sqrt(cells.length);\n\n        return (\n          <div className={className} key={name}>\n            {index > 0 ? <Separator /> : null}\n            <div className={css.header}>\n              <Subtitle>{name}</Subtitle>\n              <DateTime date={date} />\n            </div>\n            {description ? <Paragraph>{description}</Paragraph> : null}\n\n            <ArtMainLayout>\n              <Cells\n                cellsPerRow={cells_per_row}\n                forceCellsArray={cells}\n                isPlayable={false}\n              />\n            </ArtMainLayout>\n\n            <form\n              className={rootCss[\"margin-top\"]}\n              onSubmit={deleteArt}\n              method=\"delete\"\n            >\n              {/**\n               * Cannot use button value when submitting form because of event.preventDefault().\n               * So a <input type=\"hidden\"> is used. A single <input type=\"submit\"> could have been used instead but oh well.\n               */}\n              <input type=\"hidden\" name=\"entry_name\" value={name} />\n              <Button type=\"submit\" name={name}>\n                Delete Art\n              </Button>\n            </form>\n          </div>\n        );\n      })}\n      {art_deleted ? (\n        <ToastMessage\n          type={art_deleted.ok ? \"success\" : \"error\"}\n          text={art_deleted.text}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default RegisteredArts;\n","import { useLoaderData } from \"react-router-dom\";\n\nimport Paragraph from \"../components/Paragraph/Paragraph\";\nimport RegisteredArts from \"../components/RegisteredArts/RegisteredArts\";\nimport Title from \"../components/Title/Title\";\nimport ToastMessage from \"../components/ToastMessage/ToastMessage\";\nimport { TStoredArts } from \"../custom_types/stored-arts\";\n\nconst PreviousArts = (): JSX.Element => {\n  const stored_arts: TStoredArts | null = useLoaderData() as TStoredArts | null;\n\n  return (\n    <>\n      <Title>Previous Arts</Title>\n      {stored_arts && stored_arts.length ? (\n        <RegisteredArts storedArts={stored_arts} />\n      ) : (\n        <>\n          <Paragraph>There are no stored Arts!</Paragraph>\n          <ToastMessage type=\"success\" text=\"All stored Arts were deleted!\" />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PreviousArts;\n"],"names":["className","rootCss","join","children","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","css","cellsLineChecker","_check","indexes","cells","horizontal","this","vertical","cells_per_row","diagonalRight","diagonalLeft","computeResult","winning_lines","params","forEach","cell","index","array","line","push","flat","Cells","cellsPerRow","forceCellsArray","isPlayable","store","useStore","useState","makeArray","setCells","is_player_x","setPlayerTurn","Array","from","Set","winning_moves","setWinningMoves","can_draw","setCanDraw","dispatch","useDispatch","handlePointerEvent","useCallback","getState","linesAreDrawn","countdownIsReached","new_cells","new_result","updateCellsState","setNewRoundInProgress","setClassName","inline_style","style","onPointerDown","onPointerUp","onPointerLeave","map","toString","onPointerMove","undefined","onClick","useSelector","selectCellsPerRow","cells_key","selectCellsKey","type","text","toast","useRef","useEffect","restartAnimation","current","ref","_getAnimation","element","getAnimations","animation","cancel","play","pauseAnimation","pause","datetime_format","year","month","day","hour","minute","readable_format","dateStyle","timeStyle","timeZone","regex","formatDate","date","options","formatted_date","Intl","DateTimeFormat","format","Date","replace","dateTime","storedArts","art_deleted","useActionData","submit","useSubmit","deleteArt","event","preventDefault","currentTarget","art","name","description","Math","sqrt","Paragraph","ArtMainLayout","onSubmit","method","value","Button","ToastMessage","ok","stored_arts","useLoaderData","Title"],"sourceRoot":""}