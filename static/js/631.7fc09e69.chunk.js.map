{"version":3,"file":"static/js/631.7fc09e69.chunk.js","mappings":"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","sources":["components/ArtFooterLayout/ArtFooterLayout.tsx","webpack://cells-flasher-react/./src/components/ArtFooterLayout/ArtFooterLayout.module.scss?925d","components/ArtMainLayout/ArtMainLayout.tsx","webpack://cells-flasher-react/./src/components/ArtMainLayout/ArtMainLayout.module.scss?6688","webpack://cells-flasher-react/./src/components/ArtRegisterer/ArtRegisterer.module.scss?751a","components/ArtRegisterer/ArtRegisterer.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://cells-flasher-react/./src/components/Button/Button.module.scss?f17a","components/Button/Button.tsx","components/ButtonReset/ButtonReset.tsx","helpers/cellsLineChecker.ts","helpers/computeResult.ts","webpack://cells-flasher-react/./src/components/CellsController/CellsController.module.scss?cc4c","components/CellsController/CellsController.tsx","helpers/animateLine.ts","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack://cells-flasher-react/./src/components/Lines/Lines.module.scss?aa53","components/Lines/Lines.tsx","webpack://cells-flasher-react/./src/components/Timer/Timer.module.scss?5f3a","components/Timer/Timer.tsx","webpack://cells-flasher-react/./src/components/ToastMessage/ToastMessage.module.scss?b713","components/ToastMessage/ToastMessage.tsx","helpers/animationHelpers.ts"],"sourcesContent":["import { IHOC } from \"../../custom_types/hoc\";\nimport rootCss from \"../../index.module.scss\";\n\nimport css from \"./ArtFooterLayout.module.scss\";\n\nconst className = [css[\"game-footer\"], rootCss[\"margin-top\"]].join(\" \");\n\nconst ArtFooterLayout = ({ children }: IHOC): JSX.Element => {\n  return <div className={className}>{children}</div>;\n};\n\nexport default ArtFooterLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"game-footer\":\"ArtFooterLayout_game-footer__9UWUd\"};","import { IHOC } from \"../../custom_types/hoc\";\nimport rootCss from \"../../index.module.scss\";\n\nimport css from \"./ArtMainLayout.module.scss\";\n\nconst className = [css.game, rootCss[\"margin-top\"]].join(\" \");\n\nconst ArtMainLayout = ({ children }: IHOC): JSX.Element => {\n  return <div className={className}>{children}</div>;\n};\n\nexport default ArtMainLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"game\":\"ArtMainLayout_game__4ojcY\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"ArtRegisterer_dialog__7AlqE\"};","import { ChangeEvent, FormEvent, useCallback, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useSubmit } from \"react-router-dom\";\n\nimport rootCss from \"../../index.module.scss\";\nimport { selectCountdown } from \"../../store/features/countdownIsReached\";\nimport Button from \"../Button/Button\";\n\nimport css from \"./ArtRegisterer.module.scss\";\n\nconst ArtRegisterer = (): JSX.Element => {\n  const countdown_is_reached = useSelector(selectCountdown);\n  const [value, setValue] = useState(\"\");\n  const submit = useSubmit();\n\n  const dialog_form = useRef<HTMLDialogElement>(null);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  }, []);\n\n  const registerArt = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    submit(event.currentTarget);\n    dialog_form.current?.close();\n  };\n\n  return (\n    <>\n      <Button\n        disabled={!countdown_is_reached}\n        onClick={() => dialog_form.current?.showModal()}\n      >\n        Register Art\n      </Button>\n\n      <dialog className={css.dialog} id=\"dialog-form\" ref={dialog_form}>\n        <form method=\"post\" onSubmit={registerArt}>\n          <div>\n            <div>\n              <label htmlFor=\"name\">Name:</label>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                placeholder=\"type any name for this pixel art\"\n                value={value}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className={rootCss[\"margin-top\"]}>\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                placeholder=\"type an optional description\"\n              />\n            </div>\n          </div>\n\n          <div className={rootCss[\"margin-top\"]}>\n            <Button type=\"button\" onClick={() => dialog_form.current?.close()}>\n              Cancel\n            </Button>\n            <Button type=\"submit\">Validate Art</Button>\n          </div>\n        </form>\n      </dialog>\n    </>\n  );\n};\n\nexport default ArtRegisterer;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\"};","import { ComponentProps } from \"react\";\n\nimport { IHOC } from \"../../custom_types/hoc\";\n\nimport css from \"./Button.module.scss\";\n\nconst Button = ({\n  children,\n  ...props\n}: IHOC & ComponentProps<\"button\">): JSX.Element => {\n  return (\n    <button className={css.button} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  setCountdownReached,\n  selectCountdown,\n} from \"../../store/features/countdownIsReached\";\nimport { setNewRoundInProgress } from \"../../store/features/newRoundInProgress\";\nimport { resetCellsKey } from \"../../store/features/resetCells\";\nimport Button from \"../Button/Button\";\n\nconst ButtonReset = ({ resetAllCells = true }): JSX.Element => {\n  const countdown_is_reached = useSelector(selectCountdown);\n  const dispatch = useDispatch();\n\n  const handleClick = useCallback(() => {\n    dispatch(setCountdownReached(false));\n    dispatch(setNewRoundInProgress());\n\n    if (resetAllCells) {\n      dispatch(resetCellsKey());\n    }\n  }, []);\n\n  return (\n    <Button disabled={!countdown_is_reached} onClick={handleClick}>\n      Reset\n    </Button>\n  );\n};\n\nexport default ButtonReset;\n","type TCells = Array<null | string>;\ntype TCheck = false | Array<number>;\ninterface IParams {\n  i: number;\n  cells_per_row: number;\n  cells: TCells;\n}\nconst cellsLineChecker = {\n  _check(indexes: Array<number>, cells: TCells) {\n    return (\n      cells[indexes[0]] === cells[indexes[1]] &&\n      cells[indexes[1]] === cells[indexes[2]] &&\n      indexes\n    );\n  },\n  horizontal({ i, cells }: IParams): TCheck {\n    const indexes = [i, i + 1, i + 2];\n    return this._check(indexes, cells);\n  },\n  vertical({ i, cells_per_row, cells }: IParams): TCheck {\n    const indexes = [i, i + cells_per_row, i + cells_per_row * 2];\n    return this._check(indexes, cells);\n  },\n  diagonalRight({ i, cells_per_row, cells }: IParams): TCheck {\n    if (cells_per_row - (i % cells_per_row) < 3) {\n      return false;\n    }\n    const indexes = [i, i + cells_per_row + 1, i + cells_per_row * 2 + 2];\n    return this._check(indexes, cells);\n  },\n  diagonalLeft({ i, cells_per_row, cells }: IParams): TCheck {\n    if (i % cells_per_row < 2) {\n      return false;\n    }\n    const indexes = [i, i + cells_per_row - 1, i + cells_per_row * 2 - 2];\n    return this._check(indexes, cells);\n  },\n};\n\nexport { cellsLineChecker };\n","import { cellsLineChecker } from \"./cellsLineChecker\";\n\n//type Tresult = Array<number>;\n\nconst computeResult = (\n  cells: Array<null | string>,\n  cells_per_row: number\n): Array<number> => {\n  const winning_lines: Array<Array<number>> = [];\n  const params = {\n    i: 0,\n    cells,\n    cells_per_row,\n  };\n\n  cells.forEach((cell, index, array) => {\n    if (!cell || index >= array.length - 2) {\n      return;\n    }\n\n    params.i = index;\n\n    [\n      cellsLineChecker.horizontal(params),\n      cellsLineChecker.vertical(params),\n      cellsLineChecker.diagonalRight(params),\n      cellsLineChecker.diagonalLeft(params),\n    ].forEach((line) => {\n      if (line && line.length) {\n        winning_lines.push(line);\n      }\n    });\n  });\n\n  return winning_lines.flat();\n};\n\nexport { computeResult };\n","// extracted by mini-css-extract-plugin\nexport default {\"cells\":\"CellsController_cells__tOX0j\",\"player-x\":\"CellsController_player-x__Aau8H\",\"player-o\":\"CellsController_player-o__MSW80\",\"is--winner-move\":\"CellsController_is--winner-move__yF+Ky\",\"flash\":\"CellsController_flash__750Kn\"};","import { useState, useCallback, CSSProperties } from \"react\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\n\nimport { TCells } from \"../../custom_types/cells\";\nimport { computeResult } from \"../../helpers/computeResult\";\nimport { makeArray } from \"../../helpers/makeArray\";\nimport {\n  updateCellsState,\n  selectCellsPerRow,\n} from \"../../store/features/cellsState\";\nimport { setNewRoundInProgress } from \"../../store/features/newRoundInProgress\";\nimport { selectCellsKey } from \"../../store/features/resetCells\";\nimport { RootState } from \"../../store/store\";\n\nimport css from \"./CellsController.module.scss\";\n\ninterface ICellsProps {\n  cellsPerRow: number;\n  forceCellsArray?: TCells | null;\n  isPlayable?: boolean;\n}\n\ntype TWinningMoves = Array<number>;\n\n/**\n * This container provides a way to reset the state of Cells by way of the \"key\" prop update.\n * This allows to efficiently re-render Cells when user changes the number of cells per row.\n * Surprisingly, it is way faster than setting a \"forceCellsArray\" prop on a store and accessing it via redux.\n */\nconst CellsController = (): JSX.Element => {\n  const cells_per_row = useSelector(selectCellsPerRow);\n  const cells_key = useSelector(selectCellsKey);\n\n  return <Cells cellsPerRow={cells_per_row} key={cells_key + cells_per_row} />;\n};\n\nconst Cells = ({\n  cellsPerRow,\n  forceCellsArray = null,\n  isPlayable = true,\n}: ICellsProps): JSX.Element => {\n  const store = useStore();\n  const [cells, setCells] = useState<TCells>(\n    forceCellsArray ? forceCellsArray : makeArray(cellsPerRow)\n  );\n  const [is_player_x, setPlayerTurn] = useState(true);\n  const [winning_moves, setWinningMoves] = useState<TWinningMoves>(\n    forceCellsArray\n      ? Array.from(new Set(computeResult(forceCellsArray, cellsPerRow)))\n      : []\n  );\n  const [can_draw, setCanDraw] = useState(false);\n  const should_add_events = isPlayable;\n\n  const dispatch = useDispatch();\n\n  const handlePointerEvent = useCallback(\n    (index: number) => () => {\n      const { linesAreDrawn, countdownIsReached } =\n        store.getState() as RootState;\n\n      if (!linesAreDrawn || countdownIsReached || cells[index]) {\n        return;\n      }\n\n      //const index = Number((event.target as HTMLElement).dataset.key);\n      const new_cells = [...cells];\n      new_cells[index] = is_player_x ? \"x\" : \"o\";\n      const new_result = computeResult(new_cells, cellsPerRow);\n\n      setWinningMoves(Array.from(new Set([...winning_moves, ...new_result])));\n      setCells(new_cells);\n      setPlayerTurn(!is_player_x);\n\n      dispatch(updateCellsState(new_cells));\n      dispatch(setNewRoundInProgress());\n    },\n    [cells]\n  );\n\n  const setClassName = useCallback(\n    (winning_moves: TWinningMoves, cell: null | string, index: number) => {\n      if (cell) {\n        const cell_class: string = css[`player-${cell}`];\n        const winner_class: string =\n          winning_moves.indexOf(index) >= 0 ? css[\"is--winner-move\"] : \"\";\n\n        return [cell_class, winner_class].join(\" \");\n      }\n    },\n    []\n  );\n\n  const inline_style = {\n    \"--cells-per-row\": cellsPerRow,\n  } as CSSProperties;\n\n  return (\n    <div\n      {...{\n        style: inline_style,\n        className: css.cells,\n        ...(should_add_events && {\n          onPointerDown: () => setCanDraw(true),\n          onPointerUp: () => setCanDraw(false),\n          onPointerLeave: () => setCanDraw(false),\n        }),\n      }}\n    >\n      {cells.map((cell, index) => {\n        return (\n          <div\n            {...{\n              className: setClassName(winning_moves, cell, index),\n              key: index.toString(),\n              ...(should_add_events && {\n                onPointerMove: can_draw ? handlePointerEvent(index) : undefined,\n                onClick: handlePointerEvent(index),\n              }),\n            }}\n          >\n            {cell}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CellsController;\nexport { Cells };\n","import { restartAnimation } from \"./animationHelpers\";\n\n/**\n * Takes advantage of the fact that a Tagged Template Literal uses a \"frozen\" Array,\n * wherer the \"chunks\" are always the same.\n * This makes creating multiple different string from the same Tagged Template Literal faster.\n */\nconst template = (chunks: TemplateStringsArray, rest: number): string =>\n  chunks[0] + rest + chunks[1];\nconst createDelayString = (index: number): string =>\n  template`animation-delay: ${index}ms`;\n\nconst animateLine = (\n  index: number,\n  middle_line_index: number,\n  lines_vertical: Array<HTMLDivElement>,\n  lines_horizontal: Array<HTMLDivElement>\n) => {\n  const line_left = lines_vertical[index];\n  const line_top = lines_horizontal[index];\n\n  if (index === middle_line_index && lines_vertical.length % 2 !== 0) {\n    line_left.style.cssText = createDelayString(0);\n    line_top.style.cssText = createDelayString(0);\n    restartAnimation(lines_vertical[index]);\n    restartAnimation(lines_horizontal[index]);\n    return;\n  }\n\n  const line_right = lines_vertical[lines_vertical.length - 1 - index];\n  const line_bottom = lines_horizontal[lines_horizontal.length - 1 - index];\n  const delay = (middle_line_index - index) * 100;\n  line_left.style.cssText = createDelayString(delay);\n  line_right.style.cssText = createDelayString(delay);\n  line_top.style.cssText = createDelayString(delay);\n  line_bottom.style.cssText = createDelayString(delay);\n  restartAnimation(line_left);\n  restartAnimation(line_right);\n  restartAnimation(line_top);\n  restartAnimation(line_bottom);\n};\n\nexport { animateLine };\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","// extracted by mini-css-extract-plugin\nexport default {\"lines\":\"Lines_lines__xsbb6\",\"horizontal\":\"Lines_horizontal__SgmyJ\",\"draw_line\":\"Lines_draw_line__CHmCR\",\"vertical\":\"Lines_vertical__WdV4h\",\"no-animation\":\"Lines_no-animation__UhLB3\"};","import { useRef, useEffect, useCallback, memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { animateLine } from \"../../helpers/animateLine\";\nimport { selectCellsPerRow } from \"../../store/features/cellsState\";\nimport { drawingIsDone } from \"../../store/features/linesAreDrawn\";\n\nimport css from \"./Lines.module.scss\";\n\ninterface ILinesProps {\n  shouldAnimate?: boolean;\n  forceCellsPerRow?: number;\n}\n\ninterface ILinesRef {\n  current: Array<HTMLDivElement>;\n}\n\nconst css_vertical = [css.lines, css.vertical].join(\" \");\nconst css_horizontal = [css.lines, css.horizontal].join(\" \");\n\nconst Lines = memo(\n  ({\n    shouldAnimate = true,\n    forceCellsPerRow = 0,\n  }: ILinesProps): JSX.Element => {\n    const cells_per_row = forceCellsPerRow\n      ? forceCellsPerRow\n      : useSelector(selectCellsPerRow);\n    const lines_count = (cells_per_row - 1) * 2;\n    const lines_vertical: ILinesRef = useRef([]);\n    const lines_horizontal: ILinesRef = useRef([]);\n    const dispatch = useDispatch();\n\n    const addToLines = useCallback(\n      (line: HTMLDivElement | null, index: number) => {\n        if (line) {\n          const ref = lines_vertical.current[index]\n            ? lines_horizontal.current\n            : lines_vertical.current;\n          ref.push(line);\n        }\n      },\n      [cells_per_row]\n    );\n\n    const handleAnimationEnd = () => {\n      dispatch(drawingIsDone(true));\n    };\n\n    useEffect(() => {\n      if (!shouldAnimate) {\n        return;\n      }\n\n      if (lines_vertical.current.length) {\n        const middle_line = Math.floor(lines_vertical.current.length / 2);\n\n        dispatch(drawingIsDone(false));\n\n        /** Restart animations */\n        for (let i = 0; i <= middle_line; i++) {\n          animateLine(\n            i,\n            middle_line,\n            lines_vertical.current,\n            lines_horizontal.current\n          );\n        }\n      }\n\n      lines_vertical.current.length = 0;\n      lines_horizontal.current.length = 0;\n    }, [cells_per_row]);\n\n    return (\n      <>\n        <div\n          className={\n            shouldAnimate\n              ? css_vertical\n              : `${css_vertical} ${css[\"no-animation\"]}`\n          }\n        >\n          {Array.from({ length: lines_count / 2 }, (_, index) => (\n            <div\n              key={index.toString()}\n              ref={shouldAnimate ? (line) => addToLines(line, index) : null}\n              onAnimationEnd={index === 0 ? handleAnimationEnd : undefined}\n            ></div>\n          ))}\n        </div>\n\n        <div\n          className={\n            shouldAnimate\n              ? css_horizontal\n              : `${css_horizontal} ${css[\"no-animation\"]}`\n          }\n        >\n          {Array.from({ length: lines_count / 2 }, (_, index) => (\n            <div\n              key={index.toString()}\n              ref={shouldAnimate ? (line) => addToLines(line, index) : null}\n            ></div>\n          ))}\n        </div>\n      </>\n    );\n  }\n);\n\nexport default Lines;\n","// extracted by mini-css-extract-plugin\nexport default {\"svg\":\"Timer_svg__WBl-h\",\"draw_dash\":\"Timer_draw_dash__vW7lh\",\"hidden\":\"Timer_hidden__tlz+K\"};","import { useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSubmit } from \"react-router-dom\";\n\nimport { LAST_ART_NAME } from \"../../constants\";\nimport {\n  restartAnimation,\n  pauseAnimation,\n} from \"../../helpers/animationHelpers\";\nimport { setCountdownReached } from \"../../store/features/countdownIsReached\";\nimport { selectLinesAreDrawn } from \"../../store/features/linesAreDrawn\";\nimport { selectNewRoundInProgress } from \"../../store/features/newRoundInProgress\";\n\nimport css from \"./Timer.module.scss\";\n\nconst Timer = (): JSX.Element => {\n  const lines_are_drawn = useSelector(selectLinesAreDrawn);\n  const new_round_in_progress = useSelector(selectNewRoundInProgress);\n\n  const dispatch = useDispatch();\n  const submit = useSubmit();\n\n  const circle = useRef<SVGCircleElement>(null);\n  const className = css.svg + (lines_are_drawn ? \"\" : ` ${css.hidden}`);\n\n  const handleAnimationEnd = () => {\n    const form_data = new FormData();\n    form_data.append(LAST_ART_NAME, \"\");\n\n    submit(form_data, { method: \"post\" });\n    dispatch(setCountdownReached(true));\n  };\n\n  useEffect(() => {\n    pauseAnimation(circle.current);\n\n    if (lines_are_drawn) {\n      circle.current?.addEventListener(\"animationend\", handleAnimationEnd);\n      dispatch(setCountdownReached(false));\n      restartAnimation(circle.current);\n    }\n\n    return () =>\n      circle.current?.removeEventListener(\"animationend\", handleAnimationEnd);\n  }, [new_round_in_progress, lines_are_drawn]);\n\n  return (\n    <svg\n      className={className}\n      width=\"60px\"\n      height=\"60px\"\n      viewBox=\"0 0 60 60\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        ref={circle}\n        cx=\"30\"\n        cy=\"30\"\n        r=\"28\"\n        pathLength=\"1\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"4px\"\n        strokeDasharray=\"1\"\n        strokeDashoffset=\"1\"\n        fill=\"none\"\n      />\n    </svg>\n  );\n};\n\nexport default Timer;\n","// extracted by mini-css-extract-plugin\nexport default {\"toast\":\"ToastMessage_toast__hy1BO\",\"slideUp\":\"ToastMessage_slideUp__g5bH0\",\"success\":\"ToastMessage_success__ZwIRW\",\"error\":\"ToastMessage_error__1aR33\"};","import { useEffect, useRef } from \"react\";\n\nimport { restartAnimation } from \"../../helpers/animationHelpers\";\n\nimport css from \"./ToastMessage.module.scss\";\n\ninterface IToastMessageProps {\n  type: \"error\" | \"success\";\n  text: string;\n}\n\nconst ToastMessage = ({ type, text }: IToastMessageProps): JSX.Element => {\n  const toast = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    restartAnimation(toast.current);\n  }, [type, text]);\n\n  return (\n    <div ref={toast} className={`${css.toast} ${css[type]}`}>\n      {text}\n    </div>\n  );\n};\n\nexport default ToastMessage;\n","type TElement = HTMLElement | SVGCircleElement | null;\n\nconst _getAnimation = (element: TElement) => {\n  if (!element) {\n    return;\n  }\n\n  return element.getAnimations()?.[0];\n};\n\nconst restartAnimation = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.cancel();\n  animation?.play();\n};\n\nconst pauseAnimation = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.pause();\n};\n\nconst forceAnimationEnd = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.finish();\n};\n\nconst reverseAnimation = (element: TElement) => {\n  const animation = _getAnimation(element);\n  animation?.reverse();\n};\n\nexport {\n  restartAnimation,\n  pauseAnimation,\n  forceAnimationEnd,\n  reverseAnimation,\n};\n"],"names":["className","rootCss","join","children","countdown_is_reached","useSelector","selectCountdown","useState","value","setValue","submit","useSubmit","dialog_form","useRef","handleChange","useCallback","event","target","Button","disabled","onClick","current","showModal","css","id","ref","method","onSubmit","preventDefault","currentTarget","close","htmlFor","name","type","required","placeholder","onChange","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","resetAllCells","dispatch","useDispatch","handleClick","setCountdownReached","setNewRoundInProgress","resetCellsKey","cellsLineChecker","_check","indexes","cells","horizontal","this","vertical","cells_per_row","diagonalRight","diagonalLeft","computeResult","winning_lines","params","forEach","cell","index","array","line","push","flat","Cells","cellsPerRow","forceCellsArray","isPlayable","store","useStore","makeArray","setCells","is_player_x","setPlayerTurn","Array","from","Set","winning_moves","setWinningMoves","can_draw","setCanDraw","should_add_events","handlePointerEvent","getState","linesAreDrawn","countdownIsReached","new_cells","new_result","updateCellsState","setClassName","inline_style","style","onPointerDown","onPointerUp","onPointerLeave","map","toString","onPointerMove","undefined","selectCellsPerRow","cells_key","selectCellsKey","createDelayString","chunks","strings","raw","slice","freeze","defineProperties","rest","animateLine","middle_line_index","lines_vertical","lines_horizontal","line_left","line_top","cssText","restartAnimation","line_right","line_bottom","delay","css_vertical","css_horizontal","memo","shouldAnimate","forceCellsPerRow","lines_count","addToLines","handleAnimationEnd","drawingIsDone","useEffect","middle_line","Math","floor","_","onAnimationEnd","lines_are_drawn","selectLinesAreDrawn","new_round_in_progress","selectNewRoundInProgress","circle","form_data","FormData","append","LAST_ART_NAME","pauseAnimation","addEventListener","removeEventListener","width","height","viewBox","xmlns","cx","cy","r","pathLength","stroke","strokeLinecap","strokeWidth","strokeDasharray","strokeDashoffset","fill","text","toast","_getAnimation","element","getAnimations","animation","cancel","play","pause"],"sourceRoot":""}